{
  "word": "xml",
  "pronunciation": "ek·sem·el",
  "concise_definition": "n. 可扩展标记语言",
  "forms": {
    "plural": "XMLs"
  },
  "definitions": [
    {
      "pos": "noun",
      "explanation_en": "A markup language designed to store and transport data in a structured, human-readable and machine-readable format, using custom tags to define elements and their relationships.",
      "explanation_cn": "一种用于以结构化、人类可读且机器可读的格式存储和传输数据的标记语言，通过自定义标签定义元素及其相互关系。",
      "example_en": "The application uses XML to exchange configuration settings between the server and client.",
      "example_cn": "该应用程序使用 XML 在服务器和客户端之间交换配置设置。"
    },
    {
      "pos": "noun",
      "explanation_en": "A standard format widely adopted for data interchange in web services, enterprise systems, and document storage, enabling interoperability across different platforms and programming languages.",
      "explanation_cn": "一种被广泛采用的标准格式，用于 Web 服务、企业系统和文档存储中的数据交换，使不同平台和编程语言之间能够实现互操作性。",
      "example_en": "Many APIs return data in XML format for compatibility with legacy systems.",
      "example_cn": "许多 API 以 XML 格式返回数据，以兼容旧有系统。"
    }
  ],
  "comparison": [
    {
      "word_to_compare": "json",
      "analysis": "“JSON”（JavaScript 对象表示法）是一种轻量级的数据交换格式，语法更简洁，更贴近编程语言中的对象结构，易于解析且在 Web 开发中更常用。而 “XML” 语法更冗长，支持注释、命名空间和复杂的数据类型，更适合需要严格结构和元数据的场景，如配置文件和文档标准。"
    },
    {
      "word_to_compare": "html",
      "analysis": "“HTML”（超文本标记语言）主要用于定义网页的结构和内容展示，其标签是预定义的（如 <p>, <div>），侧重于显示效果。而 “XML” 的标签是用户自定义的，不规定显示方式，仅用于描述数据结构，常作为数据载体而非展示语言。"
    },
    {
      "word_to_compare": "yaml",
      "analysis": "“YAML”（YAML Ain't Markup Language）是一种以简洁缩进和人类友好语法著称的数据序列化格式，常用于配置文件。它比 XML 更易读、更紧凑，但缺乏 XML 的强类型和命名空间支持。XML 更适合复杂、标准化的数据交换，而 YAML 更适合简单配置场景。"
    }
  ]
}